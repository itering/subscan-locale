{
  "about": "About",
  "account": "Account",
  "account_index": "Account Index",
  "account_info.bonded": "Bonded",
  "account_info.democracy": "Democracy",
  "account_info.detail": "The stash can be locked by Bond, Democracy, Election at the same time",
  "account_info.phrelect": "Election",
  "account_info.token": "Token",
  "account_info.unbonding": "Unbonding",
  "accounts": "Accounts",
  "action": "Action",
  "active_accounts": "Active Accounts",
  "age": "Time",
  "all": "All",
  "and": "and",
  "api_docs": "API",
  "asset": "Asset",
  "average_bonded": "Average Bonded",
  "awarded": "awarded",
  "balance": "Balance",
  "balance_currency": "Balance {currency}",
  "basic": "Basic",
  "basic_info": "Basic Info",
  "block": "Block",
  "block_hash": "Block hash",
  "block_hash_tag": "Block#",
  "block_time": "Block Time",
  "block_timestamp": "Block Timestamp",
  "blockchain": "Blockchain",
  "blocks": "Blocks",
  "blocks_produced": "Blocks Produced",
  "bonded": "Bonded",
  "bonded_currency": "Bonded {currency}",
  "bonded_history": "Bonded History",
  "broadcast.title": "Vote for validator SUBSCAN ❤️",
  "broadcast.vote": "SUBSCAN is participating in the validator election, please vote for us ❤️",
  "call": "Call",
  "chain_data": "Chain Data",
  "chain_state": "Chain State",
  "chart": "Chart",
  "charts.active_account": "Active Account",
  "charts.amount": "Amount",
  "charts.available": "Available",
  "charts.average_price": "Average Price",
  "charts.charts": "Charts",
  "charts.click_to_view_detail": "Click [Data Point] to view details",
  "charts.daily_address": "Daily Active Address & Newly Created Address",
  "charts.daily_bond": "Daily Bond Value",
  "charts.daily_extrinsic": "Daily Extrinsic Number",
  "charts.daily_fee": "Daily Fees Used",
  "charts.daily_price": "Daily Price（{token}）",
  "charts.daily_price_short": "Daily Price",
  "charts.daily_transaction": "Daily Transaction Amount",
  "charts.date": "Date",
  "charts.ema30": "EMA30",
  "charts.expenses": "Expenses",
  "charts.filter": "Filter",
  "charts.kton": "Daily Unbonding Schedule ({token})",
  "charts.kton_bond": "Daily Bond Value ({token})",
  "charts.new_account": "New Account",
  "charts.not_supported": "This network is not \nadapted to the statistics \nmodule of {token}",
  "charts.price": "Price: ",
  "charts.price_usd": "{price} Price (USD)",
  "charts.select_chart": "Select data type",
  "charts.source": "Price data from CoinMarketCap",
  "charts.stake": "Stake",
  "charts.staking": "Total Staking: ",
  "charts.supply": "Issuance: ",
  "charts.token": "Daily Unbonding Schedule ({token})",
  "charts.token_bond": "Daily Bond Value ({token})",
  "charts.treasury_expense": "Treasury Expenses",
  "charts.treasury_income": "Treasury Available Income",
  "circulating": "Circulating",
  "closed": "Closed",
  "comment": "Comment",
  "commission": "Commission",
  "contact_us": "Contact Us",
  "controller": "Controller",
  "copy": "COPY",
  "copy_all": "Copy All",
  "copy_right": "Subscan © {year} - Developed By Subscan Team",
  "copy_success": "Copy Succeeded",
  "council": "Council",
  "current_validator": "Current",
  "data": "Data :",
  "data_analysis": "Data Analysis",
  "date": "Date",
  "decimals": "Decimals",
  "destination": "Destination",
  "detail": "Detail",
  "disapproved": "disapproved",
  "donate": "Donate",
  "donate_other": "Donate Other Token",
  "donate_title": "Thank you for your interest and support for Subscan <br/> We hope to receive token donations from the following networks:",
  "donate_unit": "Donate ({unit}) :",
  "download": "Download",
  "download_csv_file": "Download CSV File",
  "download_csv_file_all": "Download all data",
  "download_csv_file_current": "Download page data",
  "end_block": "End Block",
  "end_date": "End Date",
  "epoch": "Epoch",
  "epoch_index.phase1": "Era #{era} Reward distribution & Era #{era_next} Electing",
  "epoch_index.phase2": "Era #{era} is Electing",
  "epoch_index.phase3": "Era #{era} Elect locked & Era #{era_next} Electing",
  "era": "Era",
  "erroneous": "Erroneous",
  "error.404": "Not Found",
  "error.account_inactive": "This address may be an inactive account. Please check and try again.",
  "error.account_invalid": "The address is not recognized. Please check and try again.",
  "error.account_not_found": "The address {0} was not found. ",
  "error.account_other_network": "transform to {0} network address or view in {1} network",
  "error.account_unknown_network": "transform to {0} network address",
  "error.advance_filter": "Select module before advanced filter (account/date)",
  "error.block_current": "The current latest block is {0}",
  "error.block_not_found": "The block {0} was not found",
  "error.date_empty": "No start date or end date",
  "error.date_end": "Start date should be earlier than end date",
  "error.date_range": "No more than 30 days",
  "error.event_not_found": "The event related to {event} is not found",
  "error.event_suggest": "Do you want to search for {0}  in the extrinsic category?",
  "error.extrinsic_not_found": "The extrinsic related to {extrinsic} is not found",
  "error.extrinsic_null": "The transaction hash or index is not obtained. Please confirm the transaction is sent and try again",
  "error.extrinsic_suggest": "Do you want to search for {0}  in the event category?",
  "error.hash_not_found": "The extrinsic related to {hash} is not found",
  "error.not_number": "Not a number",
  "error.range": "Last should be greater than first",
  "eth.bridge_status": "Bridge Status",
  "eth.status_complete": "Token has been sent",
  "eth.status_confirmed": "Unclaimed",
  "eth.status_waiting": "Waiting for bridge confirmed",
  "eth.tx_hash": "Ethereum Hash",
  "event": "Event",
  "event_id": "Event ID",
  "events": "Events",
  "executed": "executed",
  "extrinsic": "Extrinsic",
  "extrinsic_hash": "Extrinsic Hash",
  "extrinsic_hash_tag": "Extrinsic#",
  "extrinsic_history": "Extrinsic History",
  "extrinsic_id": "Extrinsic ID",
  "extrinsic_index": "Extrinsic Index",
  "extrinsic_index_hash_tag": "Extrinsic Index#",
  "extrinsic_submission": "Extrinsic Submission",
  "extrinsics": "Extrinsics",
  "extrinsics_root": "Extrinsics Root",
  "failed": "Failed",
  "fee": "Fee",
  "feepaid": "Fee Paid",
  "filter": "Filter",
  "finalized": "Finalized",
  "finalized_and_latest_block": "Finalized/Latest Block",
  "finalized_blocks": "Finalized Blocks",
  "fold_up": "Fold Up",
  "for": "For",
  "from": "From",
  "govern.author": "Author",
  "govern.aye": "Aye",
  "govern.aye_votes": "Aye Votes",
  "govern.beneficiary": "Beneficiary",
  "govern.council_motions": "Council Motions",
  "govern.council_motions_hash_tag": "Council Motions#",
  "govern.created_at_block": "Created at Block",
  "govern.delay": "Delay",
  "govern.democracy_proposal": "Democracy Proposal",
  "govern.democracy_proposal_hash_tag": "Democracy Proposal#",
  "govern.democracy_referenda": "Democracy Referenda",
  "govern.democracy_referenda_hash_tag": "Democracy Referenda#",
  "govern.deposit": "Deposit",
  "govern.download_wasm_binary": "Download WASM Binary",
  "govern.end": "End",
  "govern.execution_result": "Execution Result",
  "govern.failed": "Failed",
  "govern.finder": "Finder",
  "govern.governance": "Governance",
  "govern.locked_value": "Locked Value",
  "govern.member_count": "Member Threshold",
  "govern.motion_hash": "Motion Hash",
  "govern.nay": "Nay",
  "govern.nay_votes": "Nay Votes",
  "govern.proposal": "Proposal",
  "govern.proposal_id": "Proposal ID",
  "govern.proposal_preimage": "Proposal Preimage",
  "govern.proposed_by": "Proposed by",
  "govern.proposer": "Proposer",
  "govern.reason": "Reason",
  "govern.referendum_id": "Referendum ID",
  "govern.reward": "Reward",
  "govern.status": "Status",
  "govern.success": "Success",
  "govern.tech_fullname": "Technical Committee Proposals",
  "govern.tech_fullname_hash_tag": "Technical Committee Proposals#",
  "govern.tech_proposals": "Tech. comm. Proposals",
  "govern.techcomm_member": "Techcomm Member",
  "govern.tippers": "Tippers",
  "govern.treasury_proposals": "Treasury Proposals",
  "govern.treasury_proposals_hash_tag": "Treasury Proposals#",
  "govern.treasury_tips": "Treasury Tips",
  "govern.updated_at_block": "Updated at Block",
  "govern.vote_statistics": "Vote Statistics",
  "govern.vote_threshold": "Vote Threshold",
  "govern.vote_tooltip": "Proposer will vote Aye by default when proposing. Each account can vote multiple times, and the final result is subject to the latest vote.",
  "govern.voted": "Voted",
  "govern.votes": "Voting Details",
  "govern.waiting": "Waiting",
  "hash": "Hash",
  "holders": "Holders",
  "home.advantage": "Advantages of Subscan",
  "home.aggregate": "Aggregate Substrate Network",
  "home.convenient": "Convenient toolbox",
  "home.efficiently": "Efficiently adapt differences",
  "home.join_subscan": "Join Subscan",
  "home.slogan": "Aggregate Substrate ecological network High-precision Web3 explorer",
  "home.slogan_mobile": "Aggregate Substrate<br/>ecological network<br/>High-precision Web3 explorer",
  "home.support_network": "Support Network",
  "home.support_networks": "Already support the following network",
  "home.visual": "Visual data processing",
  "home_page": "Home",
  "identityLevel": "Identity level: ",
  "includes": "Includes",
  "index": "Index",
  "inflation_rate": "Inflation Rate",
  "join_subscan": "Join Subscan",
  "join_subscan_url": "https://subscan.typeform.com/to/jqdAWJ",
  "knowngood": "Known Good",
  "language": "Language",
  "language_demo": "En",
  "latest_blocks": "Latest Blocks",
  "latest_mining": "Latest Mining",
  "launch_1": "Mainnet launched",
  "launch_2": "Staking",
  "launch_3": "Unidirectional Bridge",
  "launch_4": "Bidirectional Bridge",
  "launch_5": "Transfer",
  "launch_6": "Bridge 2.0",
  "launch_6_2": "Multi-Crosschain",
  "launch_title": "Darwinia Roadmap",
  "license": "沪ICP备17047802号-3",
  "life_time": "Life Time",
  "list": "List",
  "loading": "Loading...",
  "locked": "Locked",
  "locked_detail": "Staking Role Distribution",
  "log": "Log",
  "log_index": "Log Index",
  "lowquality": "Low Quality",
  "mainnet": "Mainnet",
  "menu": "MENU",
  "miner": "Miner",
  "module": "Module",
  "module_events": "Module Events",
  "more": "More",
  "my_share": "My Share",
  "network": "Network",
  "no_data": "No Data",
  "no_polkadotjs_extension": "No polkadot.js (extension) installed or no available account.",
  "no_related_data": "No related data found",
  "nojudgement": "No Judgement",
  "nominate": "Nominate",
  "nominator": "Nominator",
  "nominator_bonded": "Nominator Bonded",
  "nominator_stake": "Nominator Stake",
  "non_validator": "Non-validator",
  "nonce": "Nonce",
  "none": "None",
  "notpassed": "notpassed",
  "ok": "OK",
  "ok_1": "I accept",
  "open_source_notices": "Open Source Notices",
  "opened": "Opened",
  "other_bonded": "Other Bonded",
  "other_stake": "Others",
  "others": "Others",
  "outofdate": "Out of Date",
  "parachain.about_auction": "About Auction",
  "parachain.amount": "Amount",
  "parachain.auction": "Auction",
  "parachain.auction_bidders": "Auction #{num} Bidders",
  "parachain.auction_canceled": "Auction Canceled",
  "parachain.auction_end": "Auction End",
  "parachain.auction_ended": "Auction Ended, End Block: ",
  "parachain.auction_hash": "Auction #",
  "parachain.auction_history": "Auction History",
  "parachain.auction_index": "Auction Index",
  "parachain.auction_intro_1": "When the auction starts, the lease period will be announced, and bidders can bid for one or more consecutive lease index.",
  "parachain.auction_intro_2": "When the auction is in progress, we will estimate the winner based on the current bidding data. Due to the randomness of candle auction results, this estimated result is for reference only.",
  "parachain.auction_intro_3": "When the auction is over, we will announce the winner, determined block, and the bidder snapshot of the determined block.",
  "parachain.auction_start": "Auction Start",
  "parachain.auction_status": "Auction Status",
  "parachain.auction_termination": "Auction Termination",
  "parachain.auction_tip": "Only the highest bidder will enter the final bidder list for each lease period (the range containing one or more consecutive lease index).",
  "parachain.auction_waiting": "Waiting for the auction to start",
  "parachain.balance": "Balance ({symbol})",
  "parachain.batch": "Batch",
  "parachain.best_bid": "Best Bids",
  "parachain.bid": "Bid",
  "parachain.bid_from": "Bid: From",
  "parachain.bid_hash": "Bid#",
  "parachain.bid_list": "Bid List",
  "parachain.bid_search": "Owner",
  "parachain.bid_history": "Bid History",
  "parachain.bid_id": "Bid ID",
  "parachain.bidder": "Bidder",
  "parachain.bidding_funds": "Bidding Funds",
  "parachain.bids": "Bids",
  "parachain.block": "Block:",
  "parachain.block_waiting": "Announced after the auction starts",
  "parachain.build": "Building Parachains on Rococo V1",
  "parachain.campaign_status": "Campaign Status",
  "parachain.campaign_status_failed": "Failed",
  "parachain.campaign_status_progress": "In Progress",
  "parachain.campaign_status_success": "Succeeded",
  "parachain.cap": "Cap",
  "parachain.chain_data": "Chain Data",
  "parachain.chain_id": "Chain ID",
  "parachain.connected": "Connected",
  "parachain.contributor": "Contributor",
  "parachain.countdown": "Countdown",
  "parachain.countdown_day": "days",
  "parachain.countdown_hour": "hrs",
  "parachain.countdown_minute": "mins",
  "parachain.countdown_second": "secs",
  "parachain.created_block": "Created Block",
  "parachain.crowdloan": "Crowdloan",
  "parachain.crowdloan_hash": "Crowdloan#",
  "parachain.crowdloan_account": "Crowdloan Account",
  "parachain.crowdloan_list": "Crowdloan List",
  "parachain.crowdloan_search": "Owner/Para ID",
  "parachain.crowdloan_tip": "Parachains can source tokens for their parachain bids in a decentralized crowdloan.Anyone can create a new crowdloan campaign for a parachain slot",
  "parachain.current_lease": "Current Lease",
  "parachain.current_winner": "Current winner",
  "parachain.current_winner_portfolio": "Current winner portfolio",
  "parachain.end_block": "End Block",
  "parachain.end_period": "End Period Start",
  "parachain.end_period_tip": "During the end period, each block will be recorded with a snapshot, and one of the blocks will be randomly selected as the result of the auction.",
  "parachain.end_time": "End Time",
  "parachain.fund": "Fund",
  "parachain.fund_balance": "Fund Balance",
  "parachain.fund_cap": "Fund Cap",
  "parachain.fund_cap_unit": "Fund Cap ({symbol})",
  "parachain.fund_id": "Fund ID",
  "parachain.fund_status": "Fund Status",
  "parachain.fund_status_bond": "Locked",
  "parachain.fund_status_dissolve": "Dissolve",
  "parachain.fund_status_return": "Return",
  "parachain.fund_status_withdraw": "Withdraw",
  "parachain.fundraised": "Fundraised",
  "parachain.fundraised_unit": "Fundraised ({symbol})",
  "parachain.head_data": "Head Data",
  "parachain.history_parachain": "History Parachain",
  "parachain.in_auction": "In Auction",
  "parachain.last_auction": "Last Auction",
  "parachain.latest_contribute": "Latest Contribute",
  "parachain.latest_update_block": "Latest Update Block:",
  "parachain.lease_index": "Lease Index",
  "parachain.lease_period": "Lease Period",
  "parachain.no_bidders": "No Bidders",
  "parachain.note": "The batch data is only for reference, and the final result is subject to actual conditions.",
  "parachain.offboarding": "Off-boarding",
  "parachain.owner": "Owner",
  "parachain.para_id": "Para ID",
  "parachain.parachain": "Parachain",
  "parachain.parachain_hash": "Parachain#",
  "parachain.parathread_hash": "Parathread#",
  "parachain.plo": "PLO Dashboard",
  "parachain.project": "Project",
  "parachain.project_info": "Project Info",
  "parachain.proposal": "Proposal",
  "parachain.proposer": "Proposer",
  "parachain.random_terminate_period": "Random Terminate Period",
  "parachain.register_status": "Register Status",
  "parachain.relay_chain": "Relay Chain",
  "parachain.rococo": "Rococo V1",
  "parachain.selffund": "Self-fund",
  "parachain.selffund_from": "Self-fund: From",
  "parachain.selffund_list": "Self-fund List",
  "parachain.selffund_search": "Owner",
  "parachain.slot": "Slot",
  "parachain.slot_range": "Slot Range",
  "parachain.slot_type": "Slot Type",
  "parachain.slot_type_public": "Public",
  "parachain.source": "Source",
  "parachain.status": "Parachain Status",
  "parachain.supply": "Supply",
  "parachain.terminate_block": "Terminate Block",
  "parachain.terminate_block_snapshot": "Terminate Block Snapshot",
  "parachain.token": "Token",
  "parachain.total": "Total",
  "parachain.total_slot": "Total Slot",
  "parachain.type": "Type",
  "parachain.upcoming": "Parathread",
  "parachain.update_info": "Update Project Info",
  "parachain.update_time": "Update Time",
  "parachain.validation_code": "Validation Code",
  "parachain.validator": "Validator",
  "parachain.winner": "Winner",
  "parameters": "Parameters",
  "parent_hash": "Parent Hash",
  "partner": "Partner",
  "passed": "passed",
  "placeholder.check_in_extrinsic": "Please check in the extrinsic details",
  "placeholder.event": "Search by Event",
  "placeholder.search_by": "Search by Block / Extrinsic / Account",
  "plural": "s",
  "privacy_policy": "Privacy Policy",
  "proposed": "proposed",
  "query_price.amount": "Number of {unit}: ",
  "query_price.average_price": "{unit} Average Price ( USD ): ",
  "query_price.date": "Date",
  "query_price.ema_price": "{unit} EMA30 Price ( USD ): ",
  "query_price.from": "From",
  "query_price.period": "Period",
  "query_price.period_average": "Period (Average Price)",
  "query_price.placeholder": "Enter the number of {unit}",
  "query_price.price": "{unit} Price ( USD ): ",
  "query_price.price_link": "Price Data from ",
  "query_price.query": "Convert",
  "query_price.query_price": "Price Converter",
  "query_price.result": "Result",
  "query_price.time_dimension": "Time Dimension",
  "query_price.tip": "Conversion will be based on historical price at this time",
  "query_price.to": "To",
  "rank": "Rank",
  "reasonable": "Reasonable",
  "register.fee": "Fee",
  "register.index": "Index",
  "registrar": "Registrar",
  "rejected": "rejected",
  "reserved": "Reserved",
  "result": "Result",
  "retract": "Retract",
  "reward": "Reward",
  "reward&slash": "Reward&Slash",
  "reward_point": "Reward Point",
  "role": "Role",
  "round": "Round",
  "runtime.attributes": "Attributes",
  "runtime.call_functions": "Call Functions",
  "runtime.constants": "Constants",
  "runtime.docs": "Docs",
  "runtime.error": "Error",
  "runtime.error_types": "Error Types",
  "runtime.events": "Events",
  "runtime.lookup": "Lookup",
  "runtime.name": "Name",
  "runtime.parameters": "Parameters",
  "runtime.runtime": "Runtime",
  "runtime.runtime_modules": "Runtime Modules",
  "runtime.runtime_version": "Spec Version",
  "runtime.spec_version": "Spec Version",
  "runtime.storage_functions": "Storage Functions",
  "runtime.type": "Type",
  "runtime.value": "Value",
  "search": "Search",
  "search_in": "Search in",
  "search_project_token": "Search project",
  "search_validator": "Search Validator",
  "self_bonded": "Self-Bonded",
  "sender": "Sender",
  "sentence_mark": ".",
  "session_key": "Session Key",
  "share": "Share",
  "sign": "Sign",
  "signature": "Signature",
  "signed_extrinsics": "Signed Extrinsics",
  "signed_only": "Signed only",
  "slash": "Slash",
  "ss58.address": "SS58 address",
  "ss58.address_transform": "SS58 Address Transform",
  "ss58.failed": "Transform failed, this account or public key was not found.",
  "ss58.input_account": "Input Account or Public Key",
  "ss58.network": "Network",
  "ss58.transform": "Transform",
  "stake.node": "Node",
  "stake.node_name": "Name",
  "stake.reward_pot": "Reward Pot",
  "stake.waiting": "To be determined when elected",
  "staked_value": "Staked Value",
  "staking": "Staking",
  "start_block": "Start Block",
  "start_date": "Start Date",
  "started": "started",
  "stash": "Stash",
  "state_root": "State Root",
  "statistics": "{type} Statistics",
  "status": "Status",
  "status_block": "Status",
  "subaccount.tip": "Sub Account: The on-chain identity is obtained from the parent account.",
  "subscan.title": "Subscan | {name} Substrate based blockchain explorer",
  "success": "Success",
  "tabled": "tabled",
  "technical_committee": "Technical Committee",
  "term_banner": "Itering understands the importance of protecting and safeguarding your privacy. By continuing using this website you agree with our",
  "term_of_use": "Terms Of Use",
  "testnet": "Testnet",
  "time": "Time",
  "timestamp": "Timestamp",
  "tip": "tips",
  "to": "To",
  "token": "Token",
  "token_status": "Token Status",
  "tools": "Tools",
  "top_holders": "Top {number} holders (From a total of {total} holders)",
  "top_holders_filter": " (From a total of {total} holders)",
  "total_bonded": "Total Bonded",
  "total_issuance": "Total Issuance",
  "transaction_failed": "Transaction failed",
  "transaction_failed_content": "Transaction failed",
  "transaction_failed_title": "Failed",
  "transaction_success": "Transaction success",
  "transaction_success_content": "Transaction success",
  "transaction_success_title": "Success",
  "transfer_count": "Transfer Count",
  "transfer_history": "Transfer History",
  "transferrable": "Transferrable",
  "transfers": "Transfers",
  "treasury": "Treasury",
  "treasury.approved": "Approved",
  "treasury.awarded": "Awarded",
  "treasury.closed": "Closed",
  "treasury.proposed": "Proposed",
  "treasury.rejected": "Rejected",
  "treasury.retract": "Retract",
  "type": "Type",
  "unfinalized": "Unfinalized",
  "unknown": "Unknown",
  "unstaking_tip1": "Please ",
  "unstaking_tip2": "staking in the wallet",
  "unstaking_tip3": " before nominating validators",
  "validator": "Validator",
  "validator_bonded": "Validator Bonded",
  "validator_hash_tag": "Validator#",
  "validator_stake": "Validator Stake",
  "validators": "Validators",
  "value": "Value",
  "version_history": "Version History",
  "view_all": "View All",
  "view_in_polkassembly": "View in polkassembly",
  "view_more": "View More",
  "vote": "Vote",
  "voted": "Voted",
  "waiting": "Waiting"
}
